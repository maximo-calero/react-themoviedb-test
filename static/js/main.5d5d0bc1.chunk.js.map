{"version":3,"sources":["images/default-image_300.png","components/styled/MenuComponents.ts","components/header/Header.tsx","common/StringConstants.ts","common/FunctionsHelper.ts","service/DataService.ts","components/common/styled/CommonComponents.ts","components/common/MediaCard.tsx","components/common/SearchContentResults.tsx","components/common/SearchDefinition.tsx","components/common/ItemDetailDialog.tsx","components/home/Home.tsx","components/about/About.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MenuBar","styled","ul","MenuItem","li","Header","to","stringConstants","stringToEnum","obj","reduce","res","key","Object","create","stringToDate","stringDate","stringArray","split","Date","DataService","apiUrl","apiKey","this","process","entity","additionalParams","url","fetch","response","ok","Error","statusText","json","type","getApiJson","genre","genres","length","map","item","id","name","keywords","results","configuration","images","baseUrl","base_url","secureBaseUrl","secure_base_url","backdropSizes","backdrop_sizes","logoSizes","logo_sizes","posterSizes","poster_sizes","profileSizes","profile_sizes","stillSizes","still_sizes","changeKeys","change_keys","searchTerm","page","query","toString","searchMovie","total_results","movies","title","overview","shortDescription","substr","popularity","video","voteCount","vote_count","voteAverage","vote_average","releaseDate","release_date","originalLanguage","original_language","originalTitle","original_title","genreIds","genre_ids","backdropPath","backdrop_path","adult","posterPath","poster_path","totalResults","totalPages","total_pages","searchTvShow","tvShows","first_air_date","originalName","original_name","originCountry","origin_country","AppContainer","styledmui","Container","HomeContainer","display","flexDirection","alignItems","StyledCard","Card","width","height","StyledTitle","Typography","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","StyledDescription","StyledCardActionArea","CardActionArea","minHeight","StyledCardMedia","CardMedia","backgroundSize","StyledCardAction","CardActions","padding","justifyContent","StyledCardActionSpanDiv","div","StyledCardActionSpan","span","paddingLeft","StyledEventTwoTone","EventTwoTone","fill","transition","flexShrink","userSelect","StyledRateReviewTwoTone","RateReviewTwoTone","SearchMovieResultsContainer","flexGrow","StyledPaper","Paper","textAlign","color","SearchResults","InfiniteScroll","flexWrap","SearchResultItem","margin","boxSizing","MediaCard","handleClickCard","event","props","onClickCard","currentTarget","onClick","image","defaultImage","CardContent","gutterBottom","variant","contentTitle","contentDescription","titleAccess","React","Component","SearchContentResults","loader","className","items","imageBaseUrl","toLocaleDateString","pageStart","loadMore","loadResults","hasMore","hasMoreItems","useStyles","makeStyles","theme","createStyles","searchText","borderBottomColor","borderColor","marginLeft","marginBottom","searchPaper","backgroundColor","dropDown","searchIconButton","SearchDefinition","styles","component","TextField","select","label","value","searchTypeValue","onChange","onChangeSearchType","helperText","inputProps","onChangeSearchInput","placeHolderText","IconButton","aria-label","onClickSearch","searchSortValue","onChangeSort","firstColumn","marginRight","secondColumn","thirdColumn","chip","genreChip","keyWordChip","backdrop","zIndex","drawer","ItemDetailDialog","imageUrl","dialogItem","baseImageUrl","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","onEntered","aria-labelledby","open","openDialog","DialogTitle","DialogContent","Backdrop","showBackdrop","CircularProgress","Grid","container","direction","src","alt","Chip","DialogActions","Button","onClickDialogOk","Home","dataService","emptyConfiguration","emptySearchResults","handleChangeSearchType","target","newPlaceHolder","setState","prevState","searchDefinition","placeholderText","searchResults","handleChangeSort","handleOnChangeSearchInput","sortResults","state","sort","a","b","handleOnClickSearch","preventDefault","searchMovies","searchMovieResults","searchTvShows","searchTvShowResults","handleLoadMoreResults","stateMovieResults","slice","sortedMovieResults","concat","stateTvShowResults","sortedTvShowResults","itemResult","filter","genreId","moviesGenres","tvShowGenres","dialogProps","loading","handleDialogOk","handleEntered","movie","tv","getKeywords","undefined","getConfiguration","conf","getGenres","movieGenres","secureUrl","w92","imageUrlW185","w185","About","Main","exact","path","createMuiTheme","palette","background","default","StyledHeading","App","Fragment","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d5d0bc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-image_300.2d2ebf33.png\";","import styled from 'styled-components';\r\n\r\nexport const MenuBar = styled.ul `\r\n    list-style: none; \r\n    display: flex; \r\n    margin-top: 6px;\r\n    width: 85%;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    height: 40px;\r\n    font-size: 1.15em;\r\n    color: rgb(102, 102, 102);\r\n    width:100%;    \r\n`\r\n\r\nexport const MenuItem = styled.li `\r\n    flex: 3;\r\n    :hover {\r\n        color: rgb(0, 120, 212);\r\n    }\r\n    a {\r\n        display: block;\r\n        text-align: center;\r\n        padding: 5px 16px;\r\n        text-decoration: none;\r\n        color: rgb(102, 102, 102);        \r\n    }\r\n`","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuBar, MenuItem } from '../styled/MenuComponents'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <MenuBar>\r\n                    <MenuItem><Link to='/'>Home</Link></MenuItem>\r\n                    <MenuItem><Link to='/about'>About</Link></MenuItem>\r\n                </MenuBar>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","export const stringConstants = {\r\n    'empty': '',\r\n    'apiEntities': {\r\n        'configuration': '/configuration',\r\n        'searchMovie': '/search/movie',\r\n        'searchTvShow': '/search/tv',\r\n        'genre': '/genre',\r\n        'movie': '/movie/',\r\n        'tv': '/tv/',\r\n        'keywords': '/keywords'\r\n    },\r\n    'params': {\r\n        'apiKey': '?api_key=',\r\n        'query': '&query=',\r\n        'page': '&page='\r\n    }\r\n};","export function stringToEnum<T extends string>(obj: Array<T>): {[K in T]: K} {\r\n    return obj.reduce((res, key) => {\r\n      res[key] = key;\r\n      return res;\r\n    }, Object.create(null));\r\n}\r\n\r\nexport function stringToDate(stringDate: string): Date{\r\n  const stringArray: string[] = stringDate.split('-');\r\n  return new Date(+stringArray[0], +stringArray[1], +stringArray[2]) ;\r\n}","import { IDataService } from \"./DataServiceInterfaces\";\r\nimport { Configuration, SearchResults, Movie, TvShow, Item } from \"../model\";\r\nimport { stringConstants } from \"../common/StringConstants\";\r\nimport { stringToEnum, stringToDate } from \"../common/FunctionsHelper\";\r\n\r\n\r\nexport class DataService implements IDataService {\r\n    private apiUrl: string;\r\n    private apiKey: string;\r\n\r\n    constructor() {\r\n        if (process.env.API_URL && process.env.API_KEY) {\r\n            this.apiUrl = process.env.API_URL\r\n            this.apiKey = process.env.API_KEY\r\n        }else {\r\n            throw new Error('API Url is not configured');\r\n        }\r\n    }\r\n\r\n    private async getApiJson(entity: string, additionalParams?: string): Promise<any> {\r\n        let url = additionalParams \r\n                    ? `${this.apiUrl}${entity}${stringConstants.params.apiKey}${this.apiKey}${additionalParams}`\r\n                    : `${this.apiUrl}${entity}${stringConstants.params.apiKey}${this.apiKey}`;\r\n        const response: Response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText)\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n    public async getGenres(type: string): Promise<Item[]> {\r\n        const obj: any = await this.getApiJson(`${stringConstants.apiEntities.genre}${type}list`)\r\n        if (obj.genres.length > 0) {\r\n            return (obj.genres as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n            })\r\n        }else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    public async getKeywords(id: string, type:string): Promise<Item[]> {\r\n        const obj: any = await this.getApiJson(`${type}${id}${stringConstants.apiEntities.keywords}`);\r\n        \r\n        if (obj.keywords && obj.keywords.length > 0) {\r\n            return (obj.keywords as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n            });\r\n        }else if (obj.results && obj.results.length){\r\n            return (obj.results as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    name: item.name\r\n                };\r\n            });\r\n        }else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    public async getConfiguration(): Promise<Configuration> {\r\n        const obj: any = await this.getApiJson(stringConstants.apiEntities.configuration)\r\n        const configuration: Configuration = {\r\n            images: {\r\n                baseUrl: obj.images.base_url,\r\n                secureBaseUrl: obj.images.secure_base_url,\r\n                backdropSizes: stringToEnum(obj.images.backdrop_sizes),\r\n                logoSizes: stringToEnum(obj.images.logo_sizes),\r\n                posterSizes: stringToEnum(obj.images.poster_sizes),\r\n                profileSizes: stringToEnum(obj.images.profile_sizes),\r\n                stillSizes: stringToEnum(obj.images.still_sizes)\r\n            },\r\n            changeKeys: stringToEnum(obj.change_keys)\r\n        };\r\n        return configuration;\r\n    }\r\n\r\n    public async searchMovies(searchTerm: string, page: number): Promise<SearchResults> {\r\n        const query: string= `${stringConstants.params.query}${searchTerm}${stringConstants.params.page}${page.toString()}`;\r\n        const obj: any = await this.getApiJson(stringConstants.apiEntities.searchMovie, query);\r\n\r\n        if (obj.total_results > 0) {\r\n            const movies: Movie[] = (obj.results as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    title: item.title,\r\n                    overview: item.overview,\r\n                    shortDescription: item.overview \r\n                                        ? (item.overview as string).length > 60\r\n                                            ? `${(item.overview as string).substr(0, 60)}...`\r\n                                            : (item.overview as string)\r\n                                        : '',\r\n                    popularity: item.popularity,\r\n                    video: item.video,\r\n                    voteCount: item.vote_count,\r\n                    voteAverage: item.vote_average,\r\n                    releaseDate: item.release_date && stringToDate(item.release_date),\r\n                    originalLanguage: item.original_language,\r\n                    originalTitle: item.original_title,\r\n                    genreIds: item.genre_ids,\r\n                    backdropPath: item.backdrop_path,\r\n                    adult: item.adult,\r\n                    posterPath: item.poster_path\r\n                };\r\n            });\r\n\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: movies\r\n            };\r\n        }else {\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: []\r\n            };\r\n        }\r\n    }\r\n\r\n    public async searchTvShows(searchTerm: string, page: number): Promise<SearchResults> {\r\n        const query: string= `${stringConstants.params.query}${searchTerm}${stringConstants.params.page}${page.toString()}`;\r\n        const obj: any = await this.getApiJson(stringConstants.apiEntities.searchTvShow, query);\r\n\r\n        if (obj.total_results > 0) {\r\n            const tvShows: TvShow[] = (obj.results as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    title: item.name,\r\n                    overview: item.overview,\r\n                    shortDescription: item.overview \r\n                                        ? (item.overview as string).length > 60\r\n                                            ? `${(item.overview as string).substr(0, 60)}...`\r\n                                            : (item.overview as string)\r\n                                        : '',\r\n                    popularity: item.popularity,\r\n                    voteCount: item.vote_count,\r\n                    voteAverage: item.vote_average,\r\n                    releaseDate: item.first_air_date && stringToDate(item.first_air_date),\r\n                    originalName: item.original_name,\r\n                    originCountry: item.origin_country,\r\n                    originalLanguage: item.original_language,\r\n                    genreIds: item.genre_ids,\r\n                    backdropPath: item.backdrop_path,\r\n                    posterPath: item.poster_path\r\n                };\r\n            });\r\n\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: tvShows\r\n            };\r\n        }else {\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: []\r\n            };\r\n        }\r\n    }    \r\n}","import { styled as styledmui} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\n// import IconButton from '@material-ui/core/IconButton';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport styled from 'styled-components';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RateReviewTwoTone from '@material-ui/icons/RateReviewTwoTone';\r\nimport EventTwoTone from '@material-ui/icons/EventTwoTone';\r\n// import TextField from '@material-ui/core/TextField';\r\n\r\nexport const AppContainer = styledmui(Container)({\r\n\r\n});\r\n\r\nexport const HomeContainer = styledmui(Container)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const StyledCard = styledmui(Card)({\r\n    width: 270,\r\n    height: 330,\r\n});\r\n\r\nexport const StyledTitle = styledmui(Typography)({\r\n    fontSize: '0.9rem',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: 400,\r\n    lineHeight: 1.334,\r\n    letterSpacing: '0em',\r\n});\r\n\r\nexport const StyledDescription = styledmui(Typography)({\r\n    fontSize: '0.9rem',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: 400,\r\n    lineHeight: 1.334,\r\n    letterSpacing: '0em',\r\n});\r\n\r\n\r\n\r\nexport const StyledCardActionArea = styledmui(CardActionArea)({\r\n    minHeight: 285,\r\n});\r\n\r\nexport const StyledCardMedia = styledmui(CardMedia)({\r\n    height: 140,\r\n    backgroundSize: 92,\r\n});\r\n\r\nexport const StyledCardAction = styledmui(CardActions)({\r\n    display: 'flex',\r\n    padding: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n})\r\n\r\nexport const StyledCardActionSpanDiv = styled.div({\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n});\r\n\r\nexport const StyledCardActionSpan = styled.span({\r\n    fontSize: '0.9rem',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: 400,\r\n    lineHeight: 1.5,\r\n    letterSpacing: '0.00938em',\r\n    paddingLeft: '0.2rem'\r\n});\r\n\r\nexport const StyledEventTwoTone = styled(EventTwoTone)({\r\n    fill: 'currentColor',\r\n    width: '1em',\r\n    height: '1em',\r\n    display: 'inline-block',\r\n    fontSize: '1.3rem',\r\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n    flexShrink: 0,\r\n    userSelect: 'none',\r\n});\r\n\r\nexport const StyledRateReviewTwoTone = styled(RateReviewTwoTone)({\r\n    fill: 'currentColor',\r\n    width: '1em',\r\n    height: '1em',\r\n    display: 'inline-block',\r\n    fontSize: '1.3rem',\r\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n    flexShrink: 0,\r\n    userSelect: 'none',\r\n});\r\n\r\nexport const SearchMovieResultsContainer = styledmui(Container) ({\r\n    flexGrow: 1,\r\n});\r\n\r\nexport const StyledPaper = styledmui(Paper) ({\r\n    padding: 12,\r\n    textAlign: 'center',\r\n    color: 'rgba(0, 0, 0, 0.54)',\r\n    width: '100%',\r\n    height: 400,   \r\n});\r\n\r\n// export const SearchDefinitionPaper = styledmui(Paper)({\r\n//     padding: '15px 10px 5px',\r\n//     marginBottom: 10,\r\n//     display: 'flex',\r\n//     alignItems: 'flex-start',\r\n//     width: '100%',\r\n//     backgroundColor: '#fff',\r\n//     flexWrap: 'wrap',\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-evenly',\r\n// });\r\n\r\n// export const SearchDefinitionIconButton = styledmui(IconButton)({\r\n//     padding: 10,\r\n// });\r\n\r\n// export const SearchInput = styledmui(TextField)({\r\n//     root: {\r\n//         '& label.Mui-focused': {\r\n//           color: 'green',\r\n//         },\r\n//         '& .MuiInput-underline:after': {\r\n//           borderBottomColor: 'green',\r\n//         },\r\n//         '& .MuiOutlinedInput-root': {\r\n//           '& fieldset': {\r\n//             borderColor: 'red',\r\n//           },\r\n//           '&:hover fieldset': {\r\n//             borderColor: 'yellow',\r\n//           },\r\n//           '&.Mui-focused fieldset': {\r\n//             borderColor: 'green',\r\n//           },\r\n//         },\r\n//       },\r\n//       marginLeft: 8,\r\n//       marginBottom: 15\r\n// });\r\n\r\nexport const SearchResults = styledmui(InfiniteScroll)({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n});\r\n\r\nexport const SearchResultItem = styled.div({\r\n    padding: 4,\r\n\tmargin: 0,\r\n    boxSizing: 'border-box'\r\n});\r\n\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { MediaCardProps } from './ControlInterfaces';\r\nimport { StyledCard, \r\n         StyledCardActionArea, \r\n         StyledCardMedia, \r\n         StyledCardAction, \r\n         StyledEventTwoTone, \r\n         StyledRateReviewTwoTone, \r\n         StyledDescription, \r\n         StyledTitle, \r\n         StyledCardActionSpan, \r\n         StyledCardActionSpanDiv } from './styled/CommonComponents';\r\nimport defaultImage from '../../images/default-image_300.png';\r\n\r\nclass MediaCard extends React.Component<MediaCardProps> {\r\n\r\n  handleClickCard = (event: any) => {\r\n    this.props.onClickCard(event.currentTarget.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledCard>\r\n        <StyledCardActionArea \r\n          id={this.props.id.toString()}\r\n          onClick={this.handleClickCard}\r\n        >\r\n          <StyledCardMedia\r\n            image={this.props.image ? this.props.image : defaultImage}\r\n            title={this.props.title}\r\n          />\r\n          <CardContent>\r\n            <StyledTitle gutterBottom variant=\"h5\">\r\n              {this.props.contentTitle}\r\n            </StyledTitle>\r\n            <StyledDescription variant=\"body2\" color=\"textSecondary\">\r\n              {this.props.contentDescription ? this.props.contentDescription : 'No description provided'}\r\n            </StyledDescription>\r\n          </CardContent>\r\n        </StyledCardActionArea>\r\n        <StyledCardAction>\r\n          <StyledCardActionSpanDiv>\r\n            <StyledEventTwoTone titleAccess='Release date' />\r\n            <StyledCardActionSpan>{this.props.releaseDate ? this.props.releaseDate : 'No Release Date Provided'}</StyledCardActionSpan>            \r\n          </StyledCardActionSpanDiv>\r\n          <StyledCardActionSpanDiv>\r\n            <StyledRateReviewTwoTone titleAccess='Vote average'/>\r\n            <StyledCardActionSpan>{this.props.voteAverage}</StyledCardActionSpan>\r\n          </StyledCardActionSpanDiv>\r\n        </StyledCardAction>\r\n      </StyledCard>\r\n    );\r\n  \r\n  }\r\n};\r\n\r\nexport default MediaCard;\r\n","import React from 'react';\r\nimport { SearchContentResultsProps } from './ControlInterfaces';\r\nimport { SearchMovieResultsContainer, SearchResults, SearchResultItem } from './styled/CommonComponents';\r\nimport MediaCard from './MediaCard';\r\n\r\nclass SearchContentResults extends React.Component<SearchContentResultsProps> {\r\n    handleClickCard = (id: string) => {\r\n        this.props.onClickCard(id)\r\n    }\r\n\r\n    render() {\r\n        const loader = <div key={0} className=\"loader\">Loading ...</div>;\r\n        const items = this.props.results.map(item => {\r\n            return (\r\n                <SearchResultItem key={item.id}>\r\n                    <MediaCard\r\n                            id={item.id}\r\n                            title={item.title} \r\n                            image={item.posterPath && `${this.props.imageBaseUrl}${item.posterPath}`}\r\n                            contentTitle={item.title}\r\n                            contentDescription={item.shortDescription}\r\n                            releaseDate={item.releaseDate && item.releaseDate.toLocaleDateString()}\r\n                            voteAverage={item.voteAverage}\r\n                            onClickCard={this.handleClickCard}\r\n                    />           \r\n                </SearchResultItem>                            \r\n            );\r\n        });\r\n        return(\r\n\r\n            <SearchMovieResultsContainer>\r\n                <SearchResults\r\n                    pageStart={1}\r\n                    loadMore={this.props.loadResults}\r\n                    hasMore={this.props.hasMoreItems}\r\n                    loader={loader}\r\n                >\r\n                    {this.props.results.length > 0 &&\r\n                        items\r\n                    }\r\n                </SearchResults>\r\n            </SearchMovieResultsContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchContentResults;","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { SearchDefinitionProps } from './ControlInterfaces';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        searchText: {\r\n            '& label.Mui-focused': {\r\n              color: 'green',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n              borderBottomColor: 'green',\r\n            },\r\n            '& .MuiOutlinedInput-root': {\r\n              '& fieldset': {\r\n                borderColor: 'rgba(0, 0, 0, 0.23)',\r\n              },\r\n              '&:hover fieldset': {\r\n                borderColor: 'blue',\r\n              },\r\n              '&.Mui-focused fieldset': {\r\n                borderColor: 'green',\r\n              },\r\n            },\r\n            marginLeft: 8,\r\n            marginBottom: 15,\r\n            width: '25rem'\r\n        },\r\n        searchPaper: {\r\n            padding: '15px 10px 5px',\r\n            marginBottom: 10,\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n            width: '100%',\r\n            backgroundColor: '#fff',\r\n            flexWrap: 'wrap',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n        },\r\n        dropDown: {\r\n            marginBottom: 15,\r\n            width: '15rem'\r\n        },\r\n        searchIconButton: {\r\n            padding: 10,\r\n            width: '4rem',\r\n            height: '4rem',\r\n        }\r\n    })\r\n);\r\nconst SearchDefinition =(props: SearchDefinitionProps) => {\r\n    const styles = useStyles();\r\n    return(\r\n        <Paper component=\"form\" className={styles.searchPaper} >\r\n            <TextField\r\n                className={styles.dropDown}\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                label=\"Search Type\"\r\n                value={props.searchTypeValue}\r\n                onChange={props.onChangeSearchType}\r\n                helperText=\"Please select your search type\"\r\n                variant=\"outlined\"\r\n            >\r\n                <MenuItem value={'Movies'}>Movies</MenuItem>\r\n                <MenuItem value={'TV Shows'}>TV Shows</MenuItem>\r\n            </TextField>            \r\n            <TextField\r\n                className={styles.searchText}\r\n                inputProps={{ 'aria-label': 'search movies' }}\r\n                onChange={props.onChangeSearchInput}\r\n                value={props.searchTerm}\r\n                label={props.placeHolderText}\r\n                variant=\"outlined\"\r\n            />\r\n            <IconButton \r\n                className={styles.searchIconButton}\r\n                type=\"submit\"  \r\n                aria-label=\"search\"\r\n                onClick={props.onClickSearch}\r\n            >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <TextField\r\n                className={styles.dropDown}\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                label=\"Sort by\"\r\n                value={props.searchSortValue}\r\n                onChange={props.onChangeSort}\r\n                helperText=\"Please select the field to sort results\"\r\n                variant=\"outlined\"\r\n            >\r\n                <MenuItem value={'Title'}>Title</MenuItem>\r\n                <MenuItem value={'Release date'}>Release date</MenuItem>\r\n                <MenuItem value={'Vote average'}>Vote average (DESC)</MenuItem>\r\n            </TextField>              \r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default SearchDefinition;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ItemDetailDialogProps } from './ControlInterfaces';\r\nimport defaultImage from '../../images/default-image_300.png';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        firstColumn: {\r\n            marginRight: '0.900rem',\r\n            width: '13rem'\r\n        },\r\n        secondColumn: {\r\n            width: '20rem',\r\n            marginRight: '0.700rem'\r\n        },\r\n        thirdColumn: {\r\n            width: '20rem',\r\n        },\r\n        chip: {\r\n            margin: '0.200rem',\r\n        },\r\n        genreChip:{\r\n            backgroundColor: 'powderblue'\r\n        },\r\n        keyWordChip: {\r\n            backgroundColor: 'royalblue',\r\n            color: 'white'\r\n        },\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        },        \r\n    })\r\n);\r\n\r\nconst ItemDetailDialog = (props: ItemDetailDialogProps) => {\r\n    const imageUrl = props.dialogItem && props.dialogItem.posterPath \r\n                        ? `${props.baseImageUrl}${props.dialogItem?.posterPath}`\r\n                        : defaultImage;\r\n    const styles = useStyles();\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"md\"\r\n            fullWidth={true}\r\n            onEntered={props.onEntered}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={props.openDialog}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">{props.dialogItem && props.dialogItem.title}</DialogTitle>\r\n            <DialogContent>\r\n                <Backdrop className={styles.backdrop} open={props.showBackdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                <Grid container direction='row'>\r\n                    <Grid item className={styles.firstColumn}>\r\n                        <img src={imageUrl} alt={props.dialogItem && props.dialogItem.title} />\r\n                    </Grid>\r\n                    {/* <Grid item className={styles.secondColumn}> */}\r\n                    <Grid container direction='column' className={styles.secondColumn} >\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Overview\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" gutterBottom>\r\n                                {props.dialogItem && props.dialogItem.overview}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Popularity\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" gutterBottom>\r\n                                {props.dialogItem && props.dialogItem.popularity}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* </Grid> */}\r\n                    {/* <Grid item className={styles.thirdColumn}> */}\r\n                    <Grid container direction='column' className={styles.thirdColumn}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Genres\r\n                            </Typography>\r\n                            <div>\r\n                                {props.genres.length > 0 &&\r\n                                    props.genres.map(item => {\r\n                                        return(\r\n                                            <Chip className={`${styles.chip} ${styles.genreChip}`} key={item} label={item} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {props.genres.length === 0 &&\r\n                                    <Typography>No genres provided</Typography>\r\n                                }                                    \r\n                            </div>                    \r\n                        </Grid>                            \r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                Keywords\r\n                            </Typography>\r\n                            <div>\r\n                                {props.keywords.length > 0 &&\r\n                                    props.keywords.map(item => {\r\n                                        return(\r\n                                            <Chip className={`${styles.chip} ${styles.keyWordChip}`} key={item.id} label={item.name} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                                {props.keywords.length === 0 &&\r\n                                    <Typography>No keywords provided</Typography>\r\n                                }\r\n                            </div>                    \r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* </Grid>                     */}\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClickDialogOk} color=\"primary\">\r\n                Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>  \r\n    );\r\n}\r\n\r\nexport default ItemDetailDialog;","import React from 'react';\r\nimport { HomeProps } from './HomeProps';\r\nimport { HomeState } from './HomeState';\r\nimport { IDataService } from '../../service/DataServiceInterfaces';\r\nimport { DataService } from '../../service/DataService';\r\nimport { Configuration, SearchResults, TvShow, Movie, Result, Item } from '../../model';\r\nimport SearchContentResults from '../common/SearchContentResults';\r\nimport SearchDefinition from '../common/SearchDefinition';\r\nimport { HomeContainer, StyledPaper } from '../common/styled/CommonComponents';\r\nimport ItemDetailDialog from '../common/ItemDetailDialog';\r\nimport { stringConstants } from '../../common/StringConstants';\r\n\r\nclass Home extends React.Component<HomeProps, HomeState>  {\r\n    dataService: IDataService;\r\n    emptyConfiguration: Configuration = {\r\n            images: {\r\n                baseUrl: '',\r\n                secureBaseUrl: '',\r\n                backdropSizes: [],\r\n                logoSizes: [],\r\n                posterSizes: [],\r\n                profileSizes: [],\r\n                stillSizes: []\r\n            },\r\n            changeKeys: []\r\n    \r\n    };\r\n    emptySearchResults: SearchResults = {\r\n        page: 0,\r\n        totalPages: 0,\r\n        totalResults: 0,\r\n        results: []\r\n    };\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n        this.dataService = new DataService();\r\n\r\n        this.state = {\r\n            configuration: this.emptyConfiguration,\r\n            moviesGenres: [],\r\n            tvShowGenres: [],\r\n            searchResults: this.emptySearchResults,\r\n            searchDefinition: {\r\n                searchTerm: '',\r\n                searchTypeValue: 'Movies',\r\n                placeholderText: 'Search Movies'\r\n            },\r\n            searchSortValue:'Title',\r\n            dialogProps: {\r\n                loading: false,\r\n                openDialog: false,\r\n                dialogItem: undefined,\r\n                genres: [],\r\n                keywords: []\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const conf: Configuration = await this.dataService.getConfiguration();\r\n        const movieGenres: Item[] = await this.dataService.getGenres(stringConstants.apiEntities.movie);\r\n        const tvShowGenres: Item[] = await this.dataService.getGenres(stringConstants.apiEntities.tv);\r\n        this.setState({ \r\n            configuration: conf, \r\n            moviesGenres: movieGenres, \r\n            tvShowGenres: tvShowGenres \r\n        });\r\n    }\r\n\r\n    handleChangeSearchType = (event: any) => {\r\n        const { value } = event.target;\r\n        const newPlaceHolder = `Search ${value}` ;\r\n        this.setState(prevState => ({ \r\n                    ...prevState, \r\n                        searchDefinition: { \r\n                            searchTerm: '',\r\n                            searchTypeValue: value, \r\n                            placeholderText:newPlaceHolder\r\n                        },\r\n                        searchResults: {\r\n                            page: 0,\r\n                            totalPages: 0,\r\n                            totalResults: 0,\r\n                            results: []\r\n                        }\r\n                    }));\r\n    }\r\n\r\n    handleChangeSort = (event: any) => {\r\n        const { value } = event.target;\r\n        this.setState(prevState => ({ \r\n                    ...prevState, \r\n                    searchSortValue: value,\r\n                    }));\r\n    }    \r\n\r\n    handleOnChangeSearchInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { value } = event.currentTarget as HTMLInputElement;\r\n        this.setState(prevState => ({ \r\n                    ...prevState, \r\n                        searchDefinition: { \r\n                            ...prevState.searchDefinition,\r\n                            searchTerm: value\r\n                        } \r\n                    }));        \r\n    }\r\n\r\n    sortResults = (results: Result[]) => {\r\n        switch(this.state.searchSortValue) {\r\n            case 'Title':\r\n                results.sort((a, b) => {\r\n                    if (a.title < b.title)\r\n                        return -1;\r\n                    if (a.title > b.title)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                break;\r\n            case 'Release date': \r\n                results.sort((a, b) => +a.releaseDate - +b.releaseDate);\r\n                break;\r\n            case 'Vote average':\r\n                results.sort((a, b) => b.voteAverage - a.voteAverage);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleOnClickSearch = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        switch(this.state.searchDefinition.searchTypeValue) {\r\n            case 'Movies':\r\n                const searchMovieResults: SearchResults = \r\n                    await this.dataService.searchMovies(this.state.searchDefinition.searchTerm, 1);\r\n                // searchMovieResults.results.sort((a, b) => +a.releaseDate - +b.releaseDate);\r\n                this.sortResults(searchMovieResults.results);\r\n                this.setState(prevState => ({ ...prevState, searchResults: searchMovieResults }));\r\n                break;\r\n            case 'TV Shows':\r\n                const searchTvShowResults: SearchResults = \r\n                    await this.dataService.searchTvShows(this.state.searchDefinition.searchTerm, 1);\r\n                this.sortResults(searchTvShowResults.results);\r\n                this.setState(prevState => ({ ...prevState, searchResults: searchTvShowResults }));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleLoadMoreResults = async () => {\r\n        switch(this.state.searchDefinition.searchTypeValue) {\r\n            case 'Movies':\r\n                const stateMovieResults: Result[] = this.state.searchResults.results.slice();\r\n                const searchMovieResults: SearchResults = \r\n                    await this.dataService.searchMovies(this.state.searchDefinition.searchTerm, this.state.searchResults.page + 1);\r\n                const sortedMovieResults = stateMovieResults.concat(searchMovieResults.results);\r\n                this.sortResults(sortedMovieResults);\r\n                this.setState(prevState => ({ ...prevState, searchResults: {\r\n                                page: searchMovieResults.page,\r\n                                totalPages: searchMovieResults.totalPages,\r\n                                totalResults: searchMovieResults.totalResults,\r\n                                results: sortedMovieResults\r\n                            } \r\n                }));\r\n                break;\r\n            case 'TV Shows':\r\n                const stateTvShowResults: Result[] = this.state.searchResults.results.slice();\r\n                const searchTvShowResults: SearchResults = \r\n                    await this.dataService.searchTvShows(this.state.searchDefinition.searchTerm, this.state.searchResults.page + 1);\r\n                    const sortedTvShowResults = stateTvShowResults.concat(searchTvShowResults.results);\r\n                    this.sortResults(sortedTvShowResults);\r\n                this.setState(prevState => ({ ...prevState, searchResults: {\r\n                                page: searchTvShowResults.page,\r\n                                totalPages: searchTvShowResults.totalPages,\r\n                                totalResults: searchTvShowResults.totalResults,\r\n                                results: sortedTvShowResults\r\n                            } \r\n                }));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    handleClickCard = (id: string) => {\r\n        const itemResult: Result = \r\n            this.state.searchResults.results.filter(item => item.id === +id)[0];\r\n\r\n        let genres: string[] = [];\r\n        switch (this.state.searchDefinition.searchTypeValue) {\r\n            case 'Movies':\r\n                if (itemResult.genreIds.length > 0) {\r\n                        genres = itemResult.genreIds.map(genreId => {\r\n                                return this.state.moviesGenres.filter(item => item.id === genreId)[0].name;\r\n                        });\r\n                }\r\n                break;\r\n            case 'TV Shows':\r\n                if (itemResult.genreIds.length > 0) {\r\n                        genres = itemResult.genreIds.map(genreId => {\r\n                            return this.state.tvShowGenres.filter(item => item.id === genreId)[0].name;\r\n                    });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState(prevState => ({ ...prevState, \r\n            dialogProps: {\r\n                ...prevState.dialogProps,\r\n                loading: true,\r\n                openDialog: true,\r\n                dialogItem: itemResult,\r\n                genres: genres\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleDialogOk = (event: any) => {\r\n        this.setState(prevState => ({ ...prevState, \r\n            dialogProps: {\r\n                ...prevState.dialogProps,\r\n                openDialog: false,\r\n            }\r\n        }));        \r\n    }\r\n\r\n    handleEntered = async (event: any) => {\r\n        const type: string = this.state.searchDefinition.searchTypeValue === 'Movies'\r\n                                ? stringConstants.apiEntities.movie\r\n                                : stringConstants.apiEntities.tv;\r\n        if (this.state.dialogProps.dialogItem) {\r\n            const keywords: Item[] = \r\n                await this.dataService.getKeywords(this.state.dialogProps.dialogItem.id.toString(), type);\r\n            this.setState(prevState => ({ ...prevState, \r\n                dialogProps: {\r\n                    ...prevState.dialogProps,\r\n                    loading: false, \r\n                    keywords: keywords\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const secureUrl: string = this.state.configuration.images.secureBaseUrl !== ''\r\n                                ? this.state.configuration.images.secureBaseUrl\r\n                                : '';\r\n        const imageUrl: string = secureUrl !== '' ? `${secureUrl}/${this.state.configuration.images.posterSizes.w92}/` : '';\r\n        const imageUrlW185: string = secureUrl !== '' ? `${secureUrl}/${this.state.configuration.images.posterSizes.w185}/` : '';\r\n        return (\r\n            <HomeContainer>\r\n                <SearchDefinition searchTerm={this.state.searchDefinition.searchTerm} \r\n                                  searchTypeValue={this.state.searchDefinition.searchTypeValue} \r\n                                  placeHolderText={this.state.searchDefinition.placeholderText}\r\n                                  onChangeSearchInput={this.handleOnChangeSearchInput}\r\n                                  onChangeSearchType={this.handleChangeSearchType}\r\n                                  onClickSearch={this.handleOnClickSearch}\r\n                                  onChangeSort={this.handleChangeSort}\r\n                                  searchSortValue={this.state.searchSortValue}\r\n                />\r\n                {this.state.searchResults.totalResults === 0 &&\r\n                    <StyledPaper>No results</StyledPaper>\r\n                }                \r\n                {this.state.searchResults.totalResults > 0 &&\r\n                    <SearchContentResults \r\n                        imageBaseUrl={imageUrl}\r\n                        hasMoreItems={this.state.searchResults.page < this.state.searchResults.totalPages}\r\n                        results={this.state.searchDefinition.searchTypeValue === '1'\r\n                                    ? (this.state.searchResults.results as Movie[])\r\n                                    : (this.state.searchResults.results as TvShow[])} \r\n                        loadResults={this.handleLoadMoreResults}\r\n                        onClickCard={this.handleClickCard}\r\n                        />\r\n                }\r\n\r\n                <ItemDetailDialog \r\n                    baseImageUrl={imageUrlW185}\r\n                    openDialog={this.state.dialogProps.openDialog}\r\n                    showBackdrop={this.state.dialogProps.loading}\r\n                    dialogItem={this.state.dialogProps.dialogItem && this.state.dialogProps.dialogItem}\r\n                    genres={this.state.dialogProps.genres}\r\n                    keywords={this.state.dialogProps.keywords}\r\n                    onEntered={this.handleEntered}\r\n                    onClickDialogOk={this.handleDialogOk}\r\n                />\r\n            </HomeContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <p>About page</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './home/Home';\r\nimport About from './about/About';\r\n\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' component={Home}/>\r\n      <Route path='/about' component={About}/>\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Main;","import React from 'react';\r\nimport Header from './components/header/Header';\r\nimport Main from './components/Main';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { AppContainer } from './components/common/styled/CommonComponents';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { styled as styledmui, MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"white\"\r\n    }\r\n  }\r\n});\r\n\r\nconst StyledHeading = styledmui(Typography)({\r\n  textAlign: 'center',\r\n  maxWidth: '100%',\r\n  fontSize: '3rem',\r\n  color: 'steelblue'\r\n});\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n      </MuiThemeProvider>\r\n      <AppContainer maxWidth=\"lg\">\r\n        <StyledHeading variant=\"h2\" gutterBottom>Movie Database Search</StyledHeading>\r\n        <Header />\r\n        <Main />\r\n      </AppContainer>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}