{"version":3,"sources":["images/default-image_300.png","components/styled/MenuComponents.ts","components/header/Header.tsx","common/StringConstants.ts","common/FunctionsHelper.ts","service/DataService.ts","components/common/styled/CommonComponents.ts","components/common/MediaCard.tsx","components/common/SearchContentResults.tsx","components/common/SearchDefinition.tsx","components/home/Home.tsx","components/about/About.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MenuBar","styled","ul","MenuItem","li","Header","to","stringConstants","stringToEnum","obj","reduce","res","key","Object","create","stringToDate","stringDate","stringArray","split","Date","DataService","apiUrl","apiKey","this","process","entity","additionalParams","url","fetch","response","ok","Error","statusText","json","getApiJson","configuration","images","baseUrl","base_url","secureBaseUrl","secure_base_url","backdropSizes","backdrop_sizes","logoSizes","logo_sizes","posterSizes","poster_sizes","profileSizes","profile_sizes","stillSizes","still_sizes","changeKeys","change_keys","searchTerm","page","query","toString","searchMovie","total_results","movies","results","map","item","id","title","overview","shortDescription","length","substr","popularity","video","voteCount","vote_count","voteAverage","vote_average","releaseDate","release_date","originalLanguage","original_language","originalTitle","original_title","genreIds","genre_ids","backdropPath","backdrop_path","adult","posterPath","poster_path","totalResults","totalPages","total_pages","searchTvShow","tvShows","name","first_air_date","originalName","original_name","originCountry","origin_country","AppContainer","styledmui","Container","HomeContainer","display","flexDirection","alignItems","StyledCard","Card","width","height","StyledTitle","Typography","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","StyledDescription","StyledCardActionArea","CardActionArea","minHeight","StyledCardMedia","CardMedia","backgroundSize","StyledCardAction","CardActions","padding","justifyContent","StyledCardActionSpanDiv","div","StyledCardActionSpan","span","paddingLeft","StyledEventTwoTone","EventTwoTone","fill","transition","flexShrink","userSelect","StyledRateReviewTwoTone","RateReviewTwoTone","SearchMovieResultsContainer","flexGrow","StyledPaper","Paper","textAlign","color","SearchDefinitionPaper","marginBottom","backgroundColor","SearchDefinitionIconButton","IconButton","SearchDefinitionDivider","Divider","margin","SearchInput","InputBase","marginLeft","flex","SearchResults","InfiniteScroll","flexWrap","SearchResultItem","boxSizing","MediaCard","props","handleClickCard","event","onClickCard","currentTarget","onClick","image","defaultImage","CardContent","gutterBottom","variant","contentTitle","contentDescription","titleAccess","React","Component","SearchContentResults","loader","className","items","imageBaseUrl","toLocaleDateString","pageStart","loadMore","loadResults","hasMore","hasMoreItems","SearchDefinition","component","Select","value","searchTypeValue","onChange","onChangeSearchType","orientation","flexItem","placeholder","placeHolderText","inputProps","onChangeSearchInput","type","aria-label","onClickSearch","searchSortValue","onChangeSort","label","Home","dataService","emptyConfiguration","emptySearchResults","handleChangeSearchType","target","newPlaceHolder","setState","prevState","searchDefinition","placeholderText","searchResults","handleChangeSort","handleOnChangeSearchInput","sortResults","state","sort","a","b","handleOnClickSearch","preventDefault","searchMovies","searchMovieResults","searchTvShows","searchTvShowResults","handleLoadMoreResults","stateMovieResults","slice","sortedMovieResults","concat","stateTvShowResults","sortedTvShowResults","openDialog","handleDialogOk","handleEntering","alert","getConfiguration","conf","secureUrl","imageUrl","w92","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","onEntered","aria-labelledby","open","DialogTitle","DialogContent","DialogActions","Button","About","Main","exact","path","App","Fragment","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b80f70b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-image_300.2d2ebf33.png\";","import styled from 'styled-components';\r\n\r\nexport const MenuBar = styled.ul `\r\n    list-style: none; \r\n    display: flex; \r\n    margin-top: 6px;\r\n    width: 85%;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    height: 40px;\r\n    font-size: 1.15em;\r\n    color: rgb(102, 102, 102);\r\n    width:80%;    \r\n`\r\n\r\nexport const MenuItem = styled.li `\r\n    flex: 3;\r\n    :hover {\r\n        color: rgb(0, 120, 212);\r\n    }\r\n    a {\r\n        display: block;\r\n        text-align: center;\r\n        padding: 5px 16px;\r\n        text-decoration: none;\r\n        color: rgb(102, 102, 102);        \r\n    }\r\n`","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuBar, MenuItem } from '../styled/MenuComponents'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <MenuBar>\r\n                    <MenuItem><Link to='/'>Home</Link></MenuItem>\r\n                    <MenuItem><Link to='/about'>About</Link></MenuItem>\r\n                </MenuBar>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","export const stringConstants = {\r\n    'empty': '',\r\n    'apiEntities': {\r\n        'configuration': '/configuration',\r\n        'searchMovie': '/search/movie',\r\n        'searchTvShow': '/search/tv'\r\n    },\r\n    'params': {\r\n        'apiKey': '?api_key=',\r\n        'query': '&query=',\r\n        'page': '&page='\r\n    }\r\n};","export function stringToEnum<T extends string>(obj: Array<T>): {[K in T]: K} {\r\n    return obj.reduce((res, key) => {\r\n      res[key] = key;\r\n      return res;\r\n    }, Object.create(null));\r\n}\r\n\r\nexport function stringToDate(stringDate: string): Date{\r\n  const stringArray: string[] = stringDate.split('-');\r\n  return new Date(+stringArray[0], +stringArray[1], +stringArray[2]) ;\r\n}","import { IDataService } from \"./DataServiceInterfaces\";\r\nimport { Configuration, SearchResults, Movie, TvShow } from \"../model\";\r\nimport { stringConstants } from \"../common/StringConstants\";\r\nimport { stringToEnum, stringToDate } from \"../common/FunctionsHelper\";\r\n\r\n\r\nexport class DataService implements IDataService {\r\n    private apiUrl: string;\r\n    private apiKey: string;\r\n\r\n    constructor() {\r\n        if (process.env.API_URL && process.env.API_KEY) {\r\n            this.apiUrl = process.env.API_URL\r\n            this.apiKey = process.env.API_KEY\r\n        }else {\r\n            throw new Error('API Url is not configured');\r\n        }\r\n    }\r\n\r\n    private async getApiJson(entity: string, additionalParams?: string): Promise<any> {\r\n        let url = additionalParams \r\n                    ? `${this.apiUrl}${entity}${stringConstants.params.apiKey}${this.apiKey}${additionalParams}`\r\n                    : `${this.apiUrl}${entity}${stringConstants.params.apiKey}${this.apiKey}`;\r\n        const response: Response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText)\r\n        }\r\n        return await response.json();\r\n    }\r\n\r\n    public async getConfiguration(): Promise<Configuration> {\r\n        const obj: any = await this.getApiJson(stringConstants.apiEntities.configuration)\r\n        const configuration: Configuration = {\r\n            images: {\r\n                baseUrl: obj.images.base_url,\r\n                secureBaseUrl: obj.images.secure_base_url,\r\n                backdropSizes: stringToEnum(obj.images.backdrop_sizes),\r\n                logoSizes: stringToEnum(obj.images.logo_sizes),\r\n                posterSizes: stringToEnum(obj.images.poster_sizes),\r\n                profileSizes: stringToEnum(obj.images.profile_sizes),\r\n                stillSizes: stringToEnum(obj.images.still_sizes)\r\n            },\r\n            changeKeys: stringToEnum(obj.change_keys)\r\n        };\r\n        return configuration;\r\n    }\r\n\r\n    public async searchMovies(searchTerm: string, page: number): Promise<SearchResults> {\r\n        const query: string= `${stringConstants.params.query}${searchTerm}${stringConstants.params.page}${page.toString()}`;\r\n        const obj: any = await this.getApiJson(stringConstants.apiEntities.searchMovie, query);\r\n\r\n        if (obj.total_results > 0) {\r\n            const movies: Movie[] = (obj.results as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    title: item.title,\r\n                    overview: item.overview,\r\n                    shortDescription: item.overview \r\n                                        ? (item.overview as string).length > 60\r\n                                            ? `${(item.overview as string).substr(0, 60)}...`\r\n                                            : (item.overview as string)\r\n                                        : '',\r\n                    popularity: item.popularity,\r\n                    video: item.video,\r\n                    voteCount: item.vote_count,\r\n                    voteAverage: item.vote_average,\r\n                    releaseDate: stringToDate(item.release_date),\r\n                    originalLanguage: item.original_language,\r\n                    originalTitle: item.original_title,\r\n                    genreIds: item.genre_ids,\r\n                    backdropPath: item.backdrop_path,\r\n                    adult: item.adult,\r\n                    posterPath: item.poster_path\r\n                };\r\n            });\r\n\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: movies\r\n            };\r\n        }else {\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: []\r\n            };\r\n        }\r\n    }\r\n\r\n    public async searchTvShows(searchTerm: string, page: number): Promise<SearchResults> {\r\n        const query: string= `${stringConstants.params.query}${searchTerm}${stringConstants.params.page}${page.toString()}`;\r\n        const obj: any = await this.getApiJson(stringConstants.apiEntities.searchTvShow, query);\r\n\r\n        if (obj.total_results > 0) {\r\n            const tvShows: TvShow[] = (obj.results as any[]).map(item => {\r\n                return {\r\n                    id: item.id,\r\n                    title: item.name,\r\n                    overview: item.overview,\r\n                    shortDescription: item.overview \r\n                                        ? (item.overview as string).length > 60\r\n                                            ? `${(item.overview as string).substr(0, 60)}...`\r\n                                            : (item.overview as string)\r\n                                        : '',\r\n                    popularity: item.popularity,\r\n                    voteCount: item.vote_count,\r\n                    voteAverage: item.vote_average,\r\n                    releaseDate: item.first_air_date && stringToDate(item.first_air_date),\r\n                    originalName: item.original_name,\r\n                    originCountry: item.origin_country,\r\n                    originalLanguage: item.original_language,\r\n                    genreIds: item.genre_ids,\r\n                    backdropPath: item.backdrop_path,\r\n                    posterPath: item.poster_path\r\n                };\r\n            });\r\n\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: tvShows\r\n            };\r\n        }else {\r\n            return {\r\n                page: obj.page,\r\n                totalResults: obj.total_results,\r\n                totalPages: obj.total_pages,\r\n                results: []\r\n            };\r\n        }\r\n    }    \r\n}","import { styled as styledmui} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport styled from 'styled-components';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RateReviewTwoTone from '@material-ui/icons/RateReviewTwoTone';\r\nimport EventTwoTone from '@material-ui/icons/EventTwoTone';\r\n\r\nexport const AppContainer = styledmui(Container)({\r\n\r\n});\r\n\r\nexport const HomeContainer = styledmui(Container)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const StyledCard = styledmui(Card)({\r\n    width: 270,\r\n    height: 330,\r\n});\r\n\r\nexport const StyledTitle = styledmui(Typography)({\r\n    fontSize: '0.9rem',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: 400,\r\n    lineHeight: 1.334,\r\n    letterSpacing: '0em',\r\n});\r\n\r\nexport const StyledDescription = styledmui(Typography)({\r\n    fontSize: '0.9rem',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: 400,\r\n    lineHeight: 1.334,\r\n    letterSpacing: '0em',\r\n});\r\n\r\n\r\n\r\nexport const StyledCardActionArea = styledmui(CardActionArea)({\r\n    minHeight: 285,\r\n});\r\n\r\nexport const StyledCardMedia = styledmui(CardMedia)({\r\n    height: 140,\r\n    backgroundSize: 92,\r\n});\r\n\r\nexport const StyledCardAction = styledmui(CardActions)({\r\n    display: 'flex',\r\n    padding: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n})\r\n\r\nexport const StyledCardActionSpanDiv = styled.div({\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n});\r\n\r\nexport const StyledCardActionSpan = styled.span({\r\n    fontSize: '0.9rem',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: 400,\r\n    lineHeight: 1.5,\r\n    letterSpacing: '0.00938em',\r\n    paddingLeft: '0.2rem'\r\n});\r\n\r\nexport const StyledEventTwoTone = styled(EventTwoTone)({\r\n    fill: 'currentColor',\r\n    width: '1em',\r\n    height: '1em',\r\n    display: 'inline-block',\r\n    fontSize: '1.3rem',\r\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n    flexShrink: 0,\r\n    userSelect: 'none',\r\n});\r\n\r\nexport const StyledRateReviewTwoTone = styled(RateReviewTwoTone)({\r\n    fill: 'currentColor',\r\n    width: '1em',\r\n    height: '1em',\r\n    display: 'inline-block',\r\n    fontSize: '1.3rem',\r\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n    flexShrink: 0,\r\n    userSelect: 'none',\r\n});\r\n\r\nexport const SearchMovieResultsContainer = styledmui(Container) ({\r\n    flexGrow: 1,\r\n});\r\n\r\nexport const StyledPaper = styledmui(Paper) ({\r\n    padding: 12,\r\n    textAlign: 'center',\r\n    color: 'rgba(0, 0, 0, 0.54)',\r\n    width: '100%',\r\n    height: 400,   \r\n});\r\n\r\nexport const SearchDefinitionPaper = styledmui(Paper)({\r\n    padding: '0px 4px',\r\n    marginBottom: 10,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n});\r\n\r\nexport const SearchDefinitionIconButton = styledmui(IconButton)({\r\n    padding: 10,\r\n});\r\n\r\nexport const SearchDefinitionDivider = styledmui(Divider)({\r\n    height: 28,\r\n    margin: 4,\r\n});\r\n\r\nexport const SearchInput = styledmui(InputBase)({\r\n    marginLeft: 8,\r\n    flex: 1,\r\n});\r\n\r\nexport const SearchResults = styledmui(InfiniteScroll)({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n});\r\n\r\nexport const SearchResultItem = styled.div({\r\n    padding: 4,\r\n\tmargin: 0,\r\n    boxSizing: 'border-box'\r\n});\r\n\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { MediaCardProps } from './ControlInterfaces';\r\nimport { StyledCard, \r\n         StyledCardActionArea, \r\n         StyledCardMedia, \r\n         StyledCardAction, \r\n         StyledEventTwoTone, \r\n         StyledRateReviewTwoTone, \r\n         StyledDescription, \r\n         StyledTitle, \r\n         StyledCardActionSpan, \r\n         StyledCardActionSpanDiv } from './styled/CommonComponents';\r\nimport defaultImage from '../../images/default-image_300.png';\r\n\r\nclass MediaCard extends React.Component<MediaCardProps> {\r\n  constructor(props: MediaCardProps) {\r\n    super(props)\r\n  }\r\n\r\n  handleClickCard = (event: any) => {\r\n    this.props.onClickCard(event.currentTarget.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledCard>\r\n        <StyledCardActionArea \r\n          id={this.props.id.toString()}\r\n          onClick={this.handleClickCard}\r\n        >\r\n          <StyledCardMedia\r\n            image={this.props.image ? this.props.image : defaultImage}\r\n            title={this.props.title}\r\n          />\r\n          <CardContent>\r\n            <StyledTitle gutterBottom variant=\"h5\">\r\n              {this.props.contentTitle}\r\n            </StyledTitle>\r\n            <StyledDescription variant=\"body2\" color=\"textSecondary\">\r\n              {this.props.contentDescription ? this.props.contentDescription : 'No description provided'}\r\n            </StyledDescription>\r\n          </CardContent>\r\n        </StyledCardActionArea>\r\n        <StyledCardAction>\r\n          <StyledCardActionSpanDiv>\r\n            <StyledEventTwoTone titleAccess='Release date' />\r\n            <StyledCardActionSpan>{this.props.releaseDate ? this.props.releaseDate : 'No Release Date Provided'}</StyledCardActionSpan>            \r\n          </StyledCardActionSpanDiv>\r\n          <StyledCardActionSpanDiv>\r\n            <StyledRateReviewTwoTone titleAccess='Vote average'/>\r\n            <StyledCardActionSpan>{this.props.voteAverage}</StyledCardActionSpan>\r\n          </StyledCardActionSpanDiv>\r\n        </StyledCardAction>\r\n      </StyledCard>\r\n    );\r\n  \r\n  }\r\n};\r\n\r\nexport default MediaCard;\r\n","import React from 'react';\r\nimport { SearchContentResultsProps } from './ControlInterfaces';\r\nimport { SearchMovieResultsContainer, SearchResults, SearchResultItem } from './styled/CommonComponents';\r\nimport MediaCard from './MediaCard';\r\n\r\nclass SearchContentResults extends React.Component<SearchContentResultsProps> {\r\n    constructor(props: SearchContentResultsProps) {\r\n        super(props);\r\n    }\r\n    handleClickCard = (id: string) => {\r\n        this.props.onClickCard(id)\r\n    }\r\n\r\n    render() {\r\n        const loader = <div key={0} className=\"loader\">Loading ...</div>;\r\n        const items = this.props.results.map(item => {\r\n            return (\r\n                <SearchResultItem key={item.id}>\r\n                    <MediaCard\r\n                            id={item.id}\r\n                            title={item.title} \r\n                            image={item.posterPath && `${this.props.imageBaseUrl}${item.posterPath}`}\r\n                            contentTitle={item.title}\r\n                            contentDescription={item.shortDescription}\r\n                            releaseDate={item.releaseDate && item.releaseDate.toLocaleDateString()}\r\n                            voteAverage={item.voteAverage}\r\n                            onClickCard={this.handleClickCard}\r\n                    />           \r\n                </SearchResultItem>                            \r\n            );\r\n        });\r\n        return(\r\n\r\n            <SearchMovieResultsContainer>\r\n                <SearchResults\r\n                    pageStart={1}\r\n                    loadMore={this.props.loadResults}\r\n                    hasMore={this.props.hasMoreItems}\r\n                    loader={loader}\r\n                >\r\n                    {this.props.results.length > 0 &&\r\n                        items\r\n                    }\r\n                </SearchResults>\r\n            </SearchMovieResultsContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchContentResults;","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { SearchDefinitionPaper, \r\n         SearchDefinitionIconButton, \r\n         SearchDefinitionDivider, \r\n         SearchInput} from './styled/CommonComponents';\r\nimport Select from '@material-ui/core/Select';\r\nimport { SearchDefinitionProps } from './ControlInterfaces';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst SearchDefinition =(props: SearchDefinitionProps) => {\r\n    return(\r\n        <SearchDefinitionPaper component=\"form\" >\r\n            <Typography component=\"span\">Search type:  </Typography>\r\n            <Select\r\n                value={props.searchTypeValue}\r\n                onChange={props.onChangeSearchType}\r\n            >\r\n                <MenuItem value={'Movies'}>Movies</MenuItem>\r\n                <MenuItem value={'TV Shows'}>TV Shows</MenuItem>\r\n            </Select>            \r\n            <SearchDefinitionDivider orientation=\"vertical\" flexItem />\r\n            <SearchInput\r\n                placeholder={props.placeHolderText}\r\n                inputProps={{ 'aria-label': 'search movies' }}\r\n                onChange={props.onChangeSearchInput}\r\n                value={props.searchTerm}\r\n            />\r\n            <SearchDefinitionIconButton \r\n                type=\"submit\"  \r\n                aria-label=\"search\"\r\n                onClick={props.onClickSearch}\r\n            >\r\n                <SearchIcon />\r\n            </SearchDefinitionIconButton>\r\n            <SearchDefinitionDivider  orientation=\"vertical\" />\r\n            <Select\r\n                value={props.searchSortValue}\r\n                onChange={props.onChangeSort}\r\n                label='Order by'\r\n            >\r\n                <MenuItem value={'Title'}>Title</MenuItem>\r\n                <MenuItem value={'Release date'}>Release date</MenuItem>\r\n                <MenuItem value={'Vote average'}>Vote average (DESC)</MenuItem>\r\n            </Select>\r\n        </SearchDefinitionPaper>\r\n    );\r\n}\r\n\r\nexport default SearchDefinition;","import React from 'react';\r\nimport { HomeProps } from './HomeProps';\r\nimport { HomeState } from './HomeState';\r\nimport { IDataService } from '../../service/DataServiceInterfaces';\r\nimport { DataService } from '../../service/DataService';\r\nimport { Configuration, SearchResults, TvShow, Movie, Result } from '../../model';\r\nimport SearchContentResults from '../common/SearchContentResults';\r\nimport SearchDefinition from '../common/SearchDefinition';\r\nimport { HomeContainer, StyledPaper } from '../common/styled/CommonComponents';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Home extends React.Component<HomeProps, HomeState>  {\r\n    dataService: IDataService;\r\n    emptyConfiguration: Configuration = {\r\n            images: {\r\n                baseUrl: '',\r\n                secureBaseUrl: '',\r\n                backdropSizes: [],\r\n                logoSizes: [],\r\n                posterSizes: [],\r\n                profileSizes: [],\r\n                stillSizes: []\r\n            },\r\n            changeKeys: []\r\n    \r\n    };\r\n    emptySearchResults: SearchResults = {\r\n        page: 0,\r\n        totalPages: 0,\r\n        totalResults: 0,\r\n        results: []\r\n    };\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n        this.dataService = new DataService();\r\n\r\n        this.state = {\r\n            configuration: this.emptyConfiguration,\r\n            searchResults: this.emptySearchResults,\r\n            searchDefinition: {\r\n                searchTerm: '',\r\n                searchTypeValue: 'Movies',\r\n                placeholderText: 'Search Movies in The Movie Database API'\r\n            },\r\n            searchSortValue:'Title',\r\n            openDialog: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const conf: Configuration = await this.dataService.getConfiguration();\r\n        this.setState({ configuration: conf });\r\n    }\r\n\r\n    handleChangeSearchType = (event: any) => {\r\n        const { value } = event.target;\r\n        const newPlaceHolder = `Search ${value} in The Movie Database API` ;\r\n        this.setState(prevState => ({ \r\n                    ...prevState, \r\n                        searchDefinition: { \r\n                            searchTerm: '',\r\n                            searchTypeValue: value, \r\n                            placeholderText:newPlaceHolder\r\n                        },\r\n                        searchResults: {\r\n                            page: 0,\r\n                            totalPages: 0,\r\n                            totalResults: 0,\r\n                            results: []\r\n                        }\r\n                    }));\r\n    }\r\n\r\n    handleChangeSort = (event: any) => {\r\n        const { value } = event.target;\r\n        this.setState(prevState => ({ \r\n                    ...prevState, \r\n                    searchSortValue: value,\r\n                    }));\r\n    }    \r\n\r\n    handleOnChangeSearchInput = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { value } = event.currentTarget as HTMLInputElement;\r\n        this.setState(prevState => ({ \r\n                    ...prevState, \r\n                        searchDefinition: { \r\n                            ...prevState.searchDefinition,\r\n                            searchTerm: value\r\n                        } \r\n                    }));        \r\n    }\r\n\r\n    sortResults = (results: Result[]) => {\r\n        switch(this.state.searchSortValue) {\r\n            case 'Title':\r\n                results.sort((a, b) => {\r\n                    if (a.title < b.title)\r\n                        return -1;\r\n                    if (a.title > b.title)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                break;\r\n            case 'Release date': \r\n                results.sort((a, b) => +a.releaseDate - +b.releaseDate);\r\n                break;\r\n            case 'Vote average':\r\n                results.sort((a, b) => b.voteAverage - a.voteAverage);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleOnClickSearch = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        switch(this.state.searchDefinition.searchTypeValue) {\r\n            case 'Movies':\r\n                const searchMovieResults: SearchResults = \r\n                    await this.dataService.searchMovies(this.state.searchDefinition.searchTerm, 1);\r\n                // searchMovieResults.results.sort((a, b) => +a.releaseDate - +b.releaseDate);\r\n                this.sortResults(searchMovieResults.results);\r\n                this.setState(prevState => ({ ...prevState, searchResults: searchMovieResults }));\r\n                break;\r\n            case 'TV Shows':\r\n                const searchTvShowResults: SearchResults = \r\n                    await this.dataService.searchTvShows(this.state.searchDefinition.searchTerm, 1);\r\n                this.sortResults(searchTvShowResults.results);\r\n                this.setState(prevState => ({ ...prevState, searchResults: searchTvShowResults }));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleLoadMoreResults = async () => {\r\n        switch(this.state.searchDefinition.searchTypeValue) {\r\n            case 'Movies':\r\n                const stateMovieResults: Result[] = this.state.searchResults.results.slice();\r\n                const searchMovieResults: SearchResults = \r\n                    await this.dataService.searchMovies(this.state.searchDefinition.searchTerm, this.state.searchResults.page + 1);\r\n                const sortedMovieResults = stateMovieResults.concat(searchMovieResults.results);\r\n                this.sortResults(sortedMovieResults);\r\n                this.setState(prevState => ({ ...prevState, searchResults: {\r\n                                page: searchMovieResults.page,\r\n                                totalPages: searchMovieResults.totalPages,\r\n                                totalResults: searchMovieResults.totalResults,\r\n                                results: sortedMovieResults\r\n                            } \r\n                }));\r\n                break;\r\n            case 'TV Shows':\r\n                const stateTvShowResults: Result[] = this.state.searchResults.results.slice();\r\n                const searchTvShowResults: SearchResults = \r\n                    await this.dataService.searchTvShows(this.state.searchDefinition.searchTerm, this.state.searchResults.page + 1);\r\n                    const sortedTvShowResults = stateTvShowResults.concat(searchTvShowResults.results);\r\n                    this.sortResults(sortedTvShowResults);\r\n                this.setState(prevState => ({ ...prevState, searchResults: {\r\n                                page: searchTvShowResults.page,\r\n                                totalPages: searchTvShowResults.totalPages,\r\n                                totalResults: searchTvShowResults.totalResults,\r\n                                results: sortedTvShowResults\r\n                            } \r\n                }));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    handleClickCard = (id: string) => {\r\n        //alert('Click on card with id: ' + id);\r\n        this.setState(prevState => ({ ...prevState, openDialog: true }));\r\n    }\r\n\r\n    handleDialogOk = (event: any) => {\r\n        this.setState(prevState => ({ ...prevState, openDialog: false }));\r\n    }\r\n\r\n    handleEntering = (event: any) => {\r\n        alert('Entering into dialog');\r\n    }\r\n\r\n    render() {\r\n        const secureUrl: string = this.state.configuration.images.secureBaseUrl !== ''\r\n                                ? this.state.configuration.images.secureBaseUrl\r\n                                : '';\r\n        const imageUrl: string = secureUrl !== '' ? `${secureUrl}/${this.state.configuration.images.posterSizes.w92}/` : '';\r\n        return (\r\n            <HomeContainer>\r\n                <SearchDefinition searchTerm={this.state.searchDefinition.searchTerm} \r\n                                  searchTypeValue={this.state.searchDefinition.searchTypeValue} \r\n                                  placeHolderText={this.state.searchDefinition.placeholderText}\r\n                                  onChangeSearchInput={this.handleOnChangeSearchInput}\r\n                                  onChangeSearchType={this.handleChangeSearchType}\r\n                                  onClickSearch={this.handleOnClickSearch}\r\n                                  onChangeSort={this.handleChangeSort}\r\n                                  searchSortValue={this.state.searchSortValue}\r\n                />\r\n                {this.state.searchResults.totalResults === 0 &&\r\n                    <StyledPaper>No results</StyledPaper>\r\n                }                \r\n                {this.state.searchResults.totalResults > 0 &&\r\n                    <SearchContentResults \r\n                        imageBaseUrl={imageUrl}\r\n                        hasMoreItems={this.state.searchResults.page < this.state.searchResults.totalPages}\r\n                        results={this.state.searchDefinition.searchTypeValue === '1'\r\n                                    ? (this.state.searchResults.results as Movie[])\r\n                                    : (this.state.searchResults.results as TvShow[])} \r\n                        loadResults={this.handleLoadMoreResults}\r\n                        onClickCard={this.handleClickCard}\r\n                        />\r\n                }\r\n                <Dialog\r\n                    disableBackdropClick\r\n                    disableEscapeKeyDown\r\n                    maxWidth=\"md\"\r\n                    fullWidth={true}\r\n                    onEntered={this.handleEntering}\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                    open={this.state.openDialog}\r\n                >\r\n                <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n                <DialogContent>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogOk} color=\"primary\">\r\n                    Ok\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>                \r\n            </HomeContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <p>About page</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './home/Home';\r\nimport About from './about/About';\r\n\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' component={Home}/>\r\n      <Route path='/about' component={About}/>\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/header/Header';\r\nimport Main from './components/Main';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { AppContainer } from './components/common/styled/CommonComponents';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppContainer maxWidth=\"lg\">\r\n        <Header />\r\n        <Main />\r\n      </AppContainer>\r\n    </React.Fragment>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}